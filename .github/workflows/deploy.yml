name: Build and deploy orchestrator

on:
  push:
    branches: [main]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    env:
      RELEASE_BASE_DIR: /var/www/movie-harvester/releases
      RELEASE_NAME: '$(date +%Y%m%d-%H%M%S)'
      RELEASE_DIR: '/var/www/movie-harvester/releases/$(date +%Y%m%d-%H%M%S)'

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js and pnpm
        uses: actions/setup-node@v4
        with:
          node-version: 22

      - name: Install pnpm
        run: npm install -g pnpm

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build orchestrator
        run: pnpm run build

      - name: Archive build artifacts
        run: tar czf orchestrator-build.tar.gz dist ecosystem.config.js

      - name: Connect to Tailscale
        uses: tailscale/github-action@v2
        with:
          authkey: ${{ secrets.TAILSCALE_AUTHKEY }}

      - name: Create release directory and upload artifacts
        run: |
          ssh -o StrictHostKeyChecking=no deploy@prod-01 "mkdir -p $RELEASE_DIR"
          scp -o StrictHostKeyChecking=no orchestrator-build.tar.gz deploy@prod-01:$RELEASE_DIR/

      - name: Extract artifacts, update symlink, restart app
        run: |
          ssh -o StrictHostKeyChecking=no deploy@prod-01 "
            cd $RELEASE_DIR && \
            tar xzf orchestrator-build.tar.gz && \
            ln -sfn $RELEASE_DIR /var/www/movie-harvester/current && \
            pm2 startOrRestart /var/www/movie-harvester/current/ecosystem.config.js
          "

      - name: Cleanup old releases
        run: |
          ssh -o StrictHostKeyChecking=no deploy@prod-01 "
            cd /var/www/movie-harvester/releases && \
            ls -1tr | head -n -5 | xargs -d '\n' rm -rf --
          "
