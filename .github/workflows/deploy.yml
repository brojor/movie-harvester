name: Build and deploy media-harvester

on:
  push:
    branches: [main]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js and pnpm
        uses: actions/setup-node@v4
        with:
          node-version: 22

      - name: Install pnpm
        run: npm install -g pnpm

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build packages
        run: pnpm --filter "./packages/*" run build

      - name: Build libraries
        run: pnpm --filter "./libs/*" run build

      - name: Build media-harvester
        working-directory: apps/media-harvester
        run: pnpm run build

      - name: Create deployment archive
        working-directory: apps/media-harvester
        run: tar czf release.tar.gz dist ecosystem.config.js

      - name: Connect to Tailscale
        uses: tailscale/github-action@v2
        with:
          oauth-client-id: ${{ secrets.TAILSCALE_OAUTH_CLIENT_ID }}
          oauth-secret: ${{ secrets.TAILSCALE_OAUTH_SECRET }}
          tags: tag:github-ci

      - name: Deploy to production
        run: |
          TIMESTAMP=$(date +%Y%m%d-%H%M%S)
          RELEASE_DIR="/var/www/media-harvester/releases/$TIMESTAMP"

          ssh -o StrictHostKeyChecking=no deploy@prod-01 "mkdir -p $RELEASE_DIR"
          scp -o StrictHostKeyChecking=no apps/media-harvester/release.tar.gz deploy@prod-01:$RELEASE_DIR/

          ssh -o StrictHostKeyChecking=no deploy@prod-01 "
            cd $RELEASE_DIR && \
            tar xzf release.tar.gz && \
            rm release.tar.gz && \
            rm -rf /var/www/media-harvester/current && \
            ln -sf $RELEASE_DIR /var/www/media-harvester/current && \
            cd /var/www/media-harvester/current && \
            pm2 startOrRestart ecosystem.config.js && \
            cd /var/www/media-harvester/releases && \
            ls -1tr | head -n -5 | xargs -d '\n' rm -rf --
          "
