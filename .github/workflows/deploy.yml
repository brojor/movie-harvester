name: Deploy Monorepo

on:
  push:
    branches:
      - main # produkce
      - develop # staging

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: 22

      - name: Enable & install pnpm (corepack)
        run: |
          corepack enable
          corepack prepare pnpm@latest --activate

      - name: Install dependencies
        run: pnpm install --frozen-lockfile
      - name: Build apps
        run: pnpm run build

      - name: Tailscale
        uses: tailscale/github-action@v3
        with:
          oauth-client-id: ${{ secrets.TAILSCALE_OAUTH_CLIENT_ID }}
          oauth-secret: ${{ secrets.TAILSCALE_OAUTH_SECRET }}
          tags: tag:github-ci

      - name: Archive build
        run: |
          mkdir -p build-output
          cp -r apps/warforum-indexer/dist build-output/warforum-indexer
          cp -r apps/movie-browser/.output build-output/movie-browser
          cp -r apps/download-manager/.output build-output/download-manager
          cp -r apps/workers/csfd/dist build-output/csfd-worker
          cp -r apps/workers/rt/dist build-output/rt-worker
          cp -r apps/workers/tmdb/dist build-output/tmdb-worker
          cp -r apps/workers/webshare/dist build-output/webshare-worker
          cp ecosystem.config.js build-output/ecosystem.config.js
          tar czf build.tar.gz build-output

      - name: Deploy to server
        run:
          scp -o StrictHostKeyChecking=no build.tar.gz deploy@node-js-staging:~/

      - name: Unarchive build
        run:
          ssh deploy@node-js-staging "tar xzf build.tar.gz && rm build.tar.gz"

      - name: Start apps
        run:
          ssh deploy@node-js-staging "cd build-output && pm2 startOrRestart ecosystem.config.js"
